Q1.


Creaing Tables
CREATE TABLE Book (
    Book_no INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    price DECIMAL(10, 2) CHECK (price > 0),
    year_published INT
);

CREATE TABLE Customer (
    cid INT PRIMARY KEY,
    cname VARCHAR(255),
    addr VARCHAR(255),
    EMailId VARCHAR(255)
);

CREATE TABLE Book_Customer (
    Book_no INT,
    cid INT,
    quantity INT,
    PRIMARY KEY (Book_no, cid),
    FOREIGN KEY (Book_no) REFERENCES Book(Book_no),
    FOREIGN KEY (cid) REFERENCES Customer(cid)
);

Inserting Values
-- Inserting records into Book table
INSERT INTO Book (Book_no, title, author, price, year_published) VALUES
(1, 'Book1', 'Mr. Gadhave', 150.00, 2020),
(2, 'Book2', 'Mr. Talore', 180.00, 2019),
(3, 'Book3', 'Mr. Gadhave', 120.00, 2021),
(4, 'Book4', 'Ms. Smith', 200.00, 2018),
(5, 'Book5', 'Mr. Patel', 90.00, 2022),
(6, 'Book6', 'Mr. Gadhave', 160.00, 2017),
(7, 'Book7', 'Mr. Talore', 110.00, 2020),
(8, 'Book8', 'Mr. Patel', 170.00, 2019),
(9, 'Book9', 'Ms. Smith', 140.00, 2016),
(10, 'Book10', 'Mr. Gadhave', 190.00, 2015);

-- Inserting records into Customer table
INSERT INTO Customer (cid, cname, addr, EMailId) VALUES
(1, 'Alice', 'Mumbai', 'alice@example.com'),
(2, 'Bob', 'New York', 'bob@example.com'),
(3, 'Charlie', 'Mumbai', 'charlie@example.com'),
(4, 'David', 'London', 'david@example.com'),
(5, 'Emily', 'Mumbai', 'emily@example.com');

-- Inserting records into Book_Customer table
INSERT INTO Book_Customer (Book_no, cid, quantity) VALUES
(1, 1, 2),
(2, 1, 1),
(3, 2, 3),
(4, 3, 1),
(5, 4, 2),
(6, 4, 1),
(7, 5, 3),
(8, 5, 2),
(9, 2, 1),
(10, 1, 2);

1. Display the name of book whose author is “Mr. Gadhave”.
    SELECT title FROM Book WHERE author = 'Mr. Gadhave';

2. Add column EMailId into customer table.
    ALTER TABLE Customer ADD COLUMN EMailId VARCHAR(255);

3. Display customer details from 'Mumbai'.
    SELECT * FROM Customer WHERE addr = 'Mumbai';

4. Display author wise details of book.
    SELECT author, title, price, year_published FROM Book ORDER BY author;

5. Display customer name that has purchased more than 3 books.
    SELECT c.cname
    FROM Customer c
    JOIN Book_Customer bc ON c.cid = bc.cid
    GROUP BY c.cname
    HAVING COUNT(bc.Book_no) > 3;

6. Display book names having price between 100 and 200 and published.
    SELECT title
    FROM Book
    WHERE price BETWEEN 100 AND 200 AND year_published > 2010;

7. Update the title of book to “DBMS” whose author is “Mr. Talore”.
    UPDATE Book SET title = 'DBMS' WHERE author = 'Mr. Talore';



Q2. Write trigger to display the salary difference of employ

    CREATE TRIGGER display_salary_difference
    AFTER UPDATE ON Employee
    FOR EACH ROW
        BEGIN
        DECLARE old_salary DECIMAL(10,2);
        DECLARE new_salary DECIMAL(10,2);
        DECLARE salary_difference DECIMAL(10,2);
    
        -- Get the old and new salary values
        SELECT OLD.salary INTO old_salary;
        SELECT NEW.salary INTO new_salary;
    
        -- Calculate the salary difference
        SET salary_difference = new_salary - old_salary;
    
        -- Display the salary difference
        SELECT CONCAT('Salary difference for employee ', NEW.emp_name, ' is ', salary_difference) AS 'Salary Difference';
    END;


